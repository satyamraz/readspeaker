{"version":3,"sources":["App.js","ReadSpeakerReader.jsx","reportWebVitals.js","index.js"],"names":["App","ReadSpeakerReader","rspkr","ReadSpeaker","useState","value","setValue","valueSecond","setValueSecond","useEffect","console","log","window","Fragment","className","id","class","rel","accesskey","title","href","theme","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLA+FeA,I,yBChBAC,G,OAzEW,WACtB,IACIC,EACAC,EACJ,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAaA,OAZAC,qBAAU,WAAO,IAAD,EAMZC,QAAQC,IAAI,qEAAZ,GACU,QAAN,EAAAC,cAAA,SAAQT,cAGb,CAACA,EAAaD,IAGb,eAAC,IAAMW,SAAP,WACI,yBAASC,UAAU,uCAAuCC,GAAG,uBAA7D,SACI,eAAC,IAAD,WAEI,qBAAKA,GAAG,sBAAsBC,MAAM,4BAApC,SACI,oBAAGC,IAAI,WAAWD,MAAM,aAAaE,UAAU,IAAIC,MAAM,kDAAkDC,KAAK,2KAAhH,UACI,sBAAMJ,MAAM,0BAAZ,SAAsC,sBAAMA,MAAM,aAAZ,SAAyB,8CAC/D,sBAAMA,MAAM,yCAIpB,cAAC,IAAD,CAAYK,MAAM,OAAOhB,MAAOA,EAAOiB,SAAUhB,IAEjD,iKAKR,yBAASQ,UAAU,uCAAuCC,GAAG,6BAA7D,SAEI,eAAC,IAAD,WAEI,qBAAKA,GAAG,sBAAsBC,MAAM,4BAApC,SACI,oBAAGC,IAAI,WAAWD,MAAM,aAAaE,UAAU,IAAIC,MAAM,kDAAkDC,KAAK,iLAAhH,UACI,sBAAMJ,MAAM,0BAAZ,SAAsC,sBAAMA,MAAM,aAAZ,SAAyB,8CAC/D,sBAAMA,MAAM,yCAIpB,cAAC,IAAD,CAAYK,MAAM,OAAOhB,MAAOE,EAAae,SAAUd,IAE/D,20CC5CGe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f13a1b23.chunk.js","sourcesContent":["import { useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  const [counter, setCounter] = useState(0)\n  const [listItems, setListItems] = useState([])\n  const [newItemText, setNewItemText] = useState(\"\")\n\n  const handleCounterClick = value => {\n    setCounter( counter => counter + value )\n  }\n\n  const handleNewItemChange = e => {\n    setNewItemText(e.target.value)\n  }\n\n  const handleAddItem = e => {\n    e.preventDefault()\n    setListItems([...listItems, {\n      text: newItemText,id: listItems.length\n      }\n    ])\n    setNewItemText('')\n  }\n\n  const handleRemoveItem = id => {\n    const newListItems = listItems.filter( item => item.id !== id)\n    setListItems(newListItems)\n  }\n\n  const listItemComponents = listItems.map( item => {\n    return (\n      <li\n        data-testid={`item${item.id}`}\n        key={item.id}\n      >\n        {item.text}\n        <button\n          data-testid={`remove-item${item.id}`}\n          onClick={() => handleRemoveItem(item.id)}\n        >\n          Remove\n        </button>\n      </li>\n    )\n  })\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Counter:\n          <span data-testid=\"counter-value\">\n            {counter}\n          </span>\n        </p>\n        <div>\n          <button \n            onClick={() => handleCounterClick(1)}\n          >\n            Increment\n          </button>\n          <button \n            onClick={() => handleCounterClick(-1)}\n            disabled={counter <= 0}\n          >\n            Decrement\n          </button>\n        </div>\n        <form onSubmit={handleAddItem}>\n          <label\n            htmlFor=\"newItem\"\n          >\n            Create List Item\n            <input \n              id=\"newItem\"\n              value={newItemText}\n              onChange={handleNewItemChange}\n            />\n          </label>\n          <input\n            data-testid=\"add-item\"\n            type=\"submit\"\n            value=\"Add Item\"\n          />\n        </form>\n        <ul>\n          {listItemComponents}\n        </ul>\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import React, { useEffect, useState }   from \"react\";\r\nimport { Container }                    from \"reactstrap\";\r\nimport ReactQuill                       from 'react-quill';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst ReadSpeakerReader = () => {\r\n    const ID_USER = \"12602\";\r\n    var rspkr;\r\n    var ReadSpeaker;\r\n    const [value,       setValue]       = useState('');\r\n    const [valueSecond, setValueSecond] = useState('');\r\n    useEffect(() => {\r\n        // const oHead   = document.getElementsByTagName('HEAD').item(0);\r\n        // const oScript = document.createElement(\"script\");\r\n        // oScript.type  = \"text/javascript\";\r\n        // oScript.src   = `//cdn1.readspeaker.com/script/${ID_USER}/webReader/webReader.js`;\r\n        // oHead.appendChild(oScript);\r\n        console.log(\"Double-checked that the configuration has been set correctly \", rspkr?.item(\"general.usePost\"));\r\n        if (window?.ReadSpeaker && rspkr) {\r\n            ReadSpeaker?.q(() => { rspkr?.ui.addClickEvents(); });\r\n        }\r\n    }, [ReadSpeaker, rspkr])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"readspeaker-button-section mt-3 mb-2\" id=\"readspeakerContainer\">\r\n                <Container>\r\n\r\n                    <div id=\"readspeaker_button1\" class=\"rs_skip rsbtn rs_preserve\">\r\n                        <a rel=\"nofollow\" class=\"rsbtn_play\" accesskey=\"L\" title=\"Listen to this page using ReadSpeaker webReader\" href=\"https://app-na.readspeaker.com/cgi-bin/rsent?customerid=12602&amp;lang=en_us&amp;voice=Ashley&amp;readid=readspeakerContainer&amp;url=https%3A%2F%2Fsatyamraz.github.io%2Freadspeaker%2F\">\r\n                            <span class=\"rsbtn_left rsimg rspart\"><span class=\"rsbtn_text\"><span>Listen</span></span></span>\r\n                            <span class=\"rsbtn_right rsimg rsplay rspart\"></span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\r\n                </Container>\r\n            </section>\r\n\r\n            <section className=\"readspeaker-button-section mt-3 mb-2\" id=\"readspeakerContainerSecond\">\r\n\r\n                <Container>\r\n\r\n                    <div id=\"readspeaker_button2\" class=\"rs_skip rsbtn rs_preserve\">\r\n                        <a rel=\"nofollow\" class=\"rsbtn_play\" accesskey=\"L\" title=\"Listen to this page using ReadSpeaker webReader\" href=\"https://app-na.readspeaker.com/cgi-bin/rsent?customerid=12602&amp;lang=en_us&amp;voice=Ashley&amp;readid=readspeakerContainerSecond&amp;url=https%3A%2F%2Fsatyamraz.github.io%2Freadspeaker%2F\">\r\n                            <span class=\"rsbtn_left rsimg rspart\"><span class=\"rsbtn_text\"><span>Listen</span></span></span>\r\n                            <span class=\"rsbtn_right rsimg rsplay rspart\"></span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <ReactQuill theme=\"snow\" value={valueSecond} onChange={setValueSecond} />\r\n\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy\r\n              text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\r\n              It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\r\n              It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with\r\n              desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n              It is a long established fact that a reader will be distracted by the readable content of a page when looking\r\n              at its layout.\r\n              The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to\r\n              using 'Content here, content here', making it look like readable English. Many desktop publishing packages and\r\n              web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover\r\n              many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident,\r\n              sometimes on purpose (injected humour and the like).\r\n\r\n           </p>\r\n\r\n                </Container>\r\n            </section>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ReadSpeakerReader","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ReadSpeakerReader from './ReadSpeakerReader';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReadSpeakerReader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}