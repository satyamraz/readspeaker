{"version":3,"sources":["App.js","ReadSpeakerReader.jsx","reportWebVitals.js","index.js"],"names":["App","ReadSpeakerReader","rspkr","ReadSpeaker","useState","value","setValue","useEffect","oHead","document","getElementsByTagName","item","oScript","createElement","type","src","appendChild","console","log","Fragment","className","theme","onChange","id","rel","accessKey","title","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uLA+FeA,I,yBCnDAC,G,OAxCW,WACtB,IAEGC,EACAC,EACL,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OAVAC,qBAAU,WACR,IAAIC,EAAQC,SAASC,qBAAqB,QAAQC,KAAK,GACnDC,EAASH,SAASI,cAAc,UACpCD,EAAQE,KAAO,kBACfF,EAAQG,IAAR,wCATgB,QAShB,2BACAP,EAAMQ,YAAYJ,GAClBK,QAAQC,IAAI,qEAAZ,KAEC,CAACf,EAAYD,IAGd,cAAC,IAAMiB,SAAP,UACE,yBAASC,UAAU,uCAAnB,SACE,eAAC,IAAD,WAEI,cAAC,IAAD,CAAYC,MAAM,OAAOhB,MAAOA,EAAOiB,SAAUhB,IACjD,8BAAOD,GAAa,KACd,qBAAKkB,GAAG,sBAAsBH,UAAU,4BAAxC,SACE,oBAAGI,IAAI,WAAWJ,UAAU,aAAaK,UAAU,IAC/CC,MAAM,kDACNC,KAAK,kMAFT,UAGI,sBAAMP,UAAU,0BAAhB,SAA0C,sBAAMA,UAAU,aAAhB,SAA6B,8CACzE,sBAAMA,UAAU,kCAAhB,SACA,cAAC,IAAD,CAAYC,MAAM,OAAOhB,MAAOA,EAAOiB,SAAUhB,WAIzD,sBAAMc,UAAU,6CCzBfQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,K","file":"static/js/main.7bc98bab.chunk.js","sourcesContent":["import { useState } from 'react'\nimport './App.css';\n\nfunction App() {\n  const [counter, setCounter] = useState(0)\n  const [listItems, setListItems] = useState([])\n  const [newItemText, setNewItemText] = useState(\"\")\n\n  const handleCounterClick = value => {\n    setCounter( counter => counter + value )\n  }\n\n  const handleNewItemChange = e => {\n    setNewItemText(e.target.value)\n  }\n\n  const handleAddItem = e => {\n    e.preventDefault()\n    setListItems([...listItems, {\n      text: newItemText,id: listItems.length\n      }\n    ])\n    setNewItemText('')\n  }\n\n  const handleRemoveItem = id => {\n    const newListItems = listItems.filter( item => item.id !== id)\n    setListItems(newListItems)\n  }\n\n  const listItemComponents = listItems.map( item => {\n    return (\n      <li\n        data-testid={`item${item.id}`}\n        key={item.id}\n      >\n        {item.text}\n        <button\n          data-testid={`remove-item${item.id}`}\n          onClick={() => handleRemoveItem(item.id)}\n        >\n          Remove\n        </button>\n      </li>\n    )\n  })\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Counter:\n          <span data-testid=\"counter-value\">\n            {counter}\n          </span>\n        </p>\n        <div>\n          <button \n            onClick={() => handleCounterClick(1)}\n          >\n            Increment\n          </button>\n          <button \n            onClick={() => handleCounterClick(-1)}\n            disabled={counter <= 0}\n          >\n            Decrement\n          </button>\n        </div>\n        <form onSubmit={handleAddItem}>\n          <label\n            htmlFor=\"newItem\"\n          >\n            Create List Item\n            <input \n              id=\"newItem\"\n              value={newItemText}\n              onChange={handleNewItemChange}\n            />\n          </label>\n          <input\n            data-testid=\"add-item\"\n            type=\"submit\"\n            value=\"Add Item\"\n          />\n        </form>\n        <ul>\n          {listItemComponents}\n        </ul>\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import React, { useEffect,useState } from \"react\";\r\nimport { Container }        from \"reactstrap\";\r\nimport ReactQuill           from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nconst ReadSpeakerReader = () => {\r\n    const ID_USER = \"12602\";\r\n  const ID_CUSTOMER = \"12602\";\r\n   var rspkr;\r\n   var ReadSpeaker;\r\n  const [value, setValue] = useState('');\r\n  useEffect(() => {\r\n    var oHead = document.getElementsByTagName('HEAD').item(0);\r\n    var oScript= document.createElement(\"script\");\r\n    oScript.type = \"text/javascript\";\r\n    oScript.src=`//cdn1.readspeaker.com/script/${ID_USER}/webReader/webReader.js`;\r\n    oHead.appendChild(oScript);\r\n    console.log(\"Double-checked that the configuration has been set correctly \", rspkr?.item(\"general.usePost\"));\r\n    ReadSpeaker?.q(() => { rspkr?.ui.addClickEvents(); });\r\n  }, [ReadSpeaker,rspkr])\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"readspeaker-button-section mt-3 mb-2\">\r\n        <Container>\r\n           \r\n            <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n            <div>{ value? value:\"\"}</div>\r\n                  <div id=\"readspeaker_button1\" className=\"rs_skip rsbtn rs_preserve\">\r\n                    <a rel=\"nofollow\" className=\"rsbtn_play\" accessKey=\"L\"\r\n                        title=\"Listen to this page using ReadSpeaker webReader\"\r\n                        href=\"//app-na.readspeaker.com/cgi-bin/rsent?customerid=12602&amp;lang=en_us&amp;voice=Ashley&amp;readid=editorListContainer&amp;url=https%3A%2F%2Fdev-edio.ccaeducate.me%2Flearning%2Fcourses%2F53620%2Fresources%2F\">\r\n                        <span className=\"rsbtn_left rsimg rspart\"><span className=\"rsbtn_text\"><span>Listen</span></span></span>\r\n                      <span className=\"rsbtn_right rsimg rsplay rspart\">\r\n                      <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n                      </span>\r\n                    </a>\r\n                </div>\r\n              <span className=\"rsbtn_right rsimg rsplay rspart\"></span>\r\n        </Container>\r\n      </section>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ReadSpeakerReader","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ReadSpeakerReader from './ReadSpeakerReader';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReadSpeakerReader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}