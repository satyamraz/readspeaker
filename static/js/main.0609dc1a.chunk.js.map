{"version":3,"sources":["App.js","ReadSpeakerReader.jsx","reportWebVitals.js","index.js"],"names":["App","ReadSpeakerReader","rspkr","ReadSpeaker","useState","value","setValue","valueSecond","setValueSecond","useEffect","console","log","window","Fragment","className","id","class","rel","accesskey","title","href","theme","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLA+FeA,I,yBCFAC,G,OAvFW,WACtB,IACIC,EACAC,EACJ,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAaA,OAZAC,qBAAU,WAAO,IAAD,EAMZC,QAAQC,IAAI,qEAAZ,GACU,QAAN,EAAAC,cAAA,SAAQT,cAGb,CAACA,EAAaD,IAGb,eAAC,IAAMW,SAAP,WACI,2DACA,yBAASC,UAAU,uCAAuCC,GAAG,uBAA7D,SACI,eAAC,IAAD,WAEI,qBAAKA,GAAG,sBAAsBC,MAAM,4BAApC,SACI,oBAAGC,IAAI,WAAWD,MAAM,aAAaE,UAAU,IAAIC,MAAM,kDAAkDC,KAAK,2KAAhH,UACI,sBAAMJ,MAAM,0BAAZ,SAAsC,sBAAMA,MAAM,aAAZ,SAAyB,8CAC/D,sBAAMA,MAAM,yCAIpB,cAAC,IAAD,CAAYK,MAAM,OAAOhB,MAAOA,EAAOiB,SAAUhB,IAEjD,iKAKR,q3BAGA,svBAGA,q3BAIA,wDACA,yBAASQ,UAAU,uCAAuCC,GAAG,6BAA7D,SAEI,eAAC,IAAD,WAEI,qBAAKA,GAAG,sBAAsBC,MAAM,4BAApC,SACI,oBAAGC,IAAI,WAAWD,MAAM,aAAaE,UAAU,IAAIC,MAAM,kDAAkDC,KAAK,iLAAhH,UACI,sBAAMJ,MAAM,0BAAZ,SAAsC,sBAAMA,MAAM,aAAZ,SAAyB,8CAC/D,sBAAMA,MAAM,yCAIpB,qBAAKF,UAAU,cAAf,SACI,cAAC,IAAD,CAAYO,MAAM,OAAOhB,MAAOE,EAAae,SAAUd,MAGnE,20CC1DGe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0609dc1a.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [counter, setCounter] = useState(0)\r\n  const [listItems, setListItems] = useState([])\r\n  const [newItemText, setNewItemText] = useState(\"\")\r\n\r\n  const handleCounterClick = value => {\r\n    setCounter( counter => counter + value )\r\n  }\r\n\r\n  const handleNewItemChange = e => {\r\n    setNewItemText(e.target.value)\r\n  }\r\n\r\n  const handleAddItem = e => {\r\n    e.preventDefault()\r\n    setListItems([...listItems, {\r\n      text: newItemText,id: listItems.length\r\n      }\r\n    ])\r\n    setNewItemText('')\r\n  }\r\n\r\n  const handleRemoveItem = id => {\r\n    const newListItems = listItems.filter( item => item.id !== id)\r\n    setListItems(newListItems)\r\n  }\r\n\r\n  const listItemComponents = listItems.map( item => {\r\n    return (\r\n      <li\r\n        data-testid={`item${item.id}`}\r\n        key={item.id}\r\n      >\r\n        {item.text}\r\n        <button\r\n          data-testid={`remove-item${item.id}`}\r\n          onClick={() => handleRemoveItem(item.id)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </li>\r\n    )\r\n  })\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>\r\n          Counter:\r\n          <span data-testid=\"counter-value\">\r\n            {counter}\r\n          </span>\r\n        </p>\r\n        <div>\r\n          <button \r\n            onClick={() => handleCounterClick(1)}\r\n          >\r\n            Increment\r\n          </button>\r\n          <button \r\n            onClick={() => handleCounterClick(-1)}\r\n            disabled={counter <= 0}\r\n          >\r\n            Decrement\r\n          </button>\r\n        </div>\r\n        <form onSubmit={handleAddItem}>\r\n          <label\r\n            htmlFor=\"newItem\"\r\n          >\r\n            Create List Item\r\n            <input \r\n              id=\"newItem\"\r\n              value={newItemText}\r\n              onChange={handleNewItemChange}\r\n            />\r\n          </label>\r\n          <input\r\n            data-testid=\"add-item\"\r\n            type=\"submit\"\r\n            value=\"Add Item\"\r\n          />\r\n        </form>\r\n        <ul>\r\n          {listItemComponents}\r\n        </ul>\r\n\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React, { useEffect, useState }   from \"react\";\r\nimport { Container }                    from \"reactstrap\";\r\nimport ReactQuill                       from 'react-quill';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst ReadSpeakerReader = () => {\r\n    const ID_USER = \"12602\";\r\n    var rspkr;\r\n    var ReadSpeaker;\r\n    const [value,       setValue]       = useState('');\r\n    const [valueSecond, setValueSecond] = useState('');\r\n    useEffect(() => {\r\n        // const oHead   = document.getElementsByTagName('HEAD').item(0);\r\n        // const oScript = document.createElement(\"script\");\r\n        // oScript.type  = \"text/javascript\";\r\n        // oScript.src   = `//cdn1.readspeaker.com/script/${ID_USER}/webReader/webReader.js`;\r\n        // oHead.appendChild(oScript);\r\n        console.log(\"Double-checked that the configuration has been set correctly \", rspkr?.item(\"general.usePost\"));\r\n        if (window?.ReadSpeaker && rspkr) {\r\n            ReadSpeaker?.q(() => { rspkr?.ui.addClickEvents(); });\r\n        }\r\n    }, [ReadSpeaker, rspkr])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Without RS_PRESERVE CLASS</h2>\r\n            <section className=\"readspeaker-button-section mt-3 mb-2\" id=\"readspeakerContainer\">\r\n                <Container>\r\n\r\n                    <div id=\"readspeaker_button1\" class=\"rs_skip rsbtn rs_preserve\">\r\n                        <a rel=\"nofollow\" class=\"rsbtn_play\" accesskey=\"L\" title=\"Listen to this page using ReadSpeaker webReader\" href=\"https://app-na.readspeaker.com/cgi-bin/rsent?customerid=12602&amp;lang=en_us&amp;voice=Ashley&amp;readid=readspeakerContainer&amp;url=https%3A%2F%2Fsatyamraz.github.io%2Freadspeaker%2F\">\r\n                            <span class=\"rsbtn_left rsimg rspart\"><span class=\"rsbtn_text\"><span>Listen</span></span></span>\r\n                            <span class=\"rsbtn_right rsimg rsplay rspart\"></span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\r\n                </Container>\r\n            </section>\r\n\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Et molestie ac feugiat sed lectus vestibulum mattis ullamcorper velit. Tempus egestas sed sed risus pretium quam vulputate dignissim suspendisse. Tristique risus nec feugiat in fermentum. Quisque id diam vel quam elementum pulvinar etiam non quam. Ut pharetra sit amet aliquam id. Accumsan tortor posuere ac ut consequat semper. Mauris augue neque gravida in fermentum et sollicitudin ac orci. Nunc eget lorem dolor sed viverra ipsum. Massa id neque aliquam vestibulum morbi blandit cursus. In pellentesque massa placerat duis. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. Amet venenatis urna cursus eget nunc scelerisque viverra mauris. Ornare arcu odio ut sem nulla. Quis lectus nulla at volutpat diam ut.\r\n            </p>\r\n            <p>\r\n                Ultrices gravida dictum fusce ut placerat orci. Morbi quis commodo odio aenean sed. Tincidunt vitae semper quis lectus. Senectus et netus et malesuada. Elementum sagittis vitae et leo duis ut diam quam. A diam maecenas sed enim ut sem viverra. Enim praesent elementum facilisis leo vel. Bibendum est ultricies integer quis auctor elit sed. Vel orci porta non pulvinar neque laoreet suspendisse. Faucibus et molestie ac feugiat sed lectus vestibulum mattis. Quis viverra nibh cras pulvinar mattis nunc sed blandit libero. Tellus mauris a diam maecenas sed enim ut. Amet consectetur adipiscing elit duis tristique. Ipsum nunc aliquet bibendum enim facilisis gravida neque convallis. Quam vulputate dignissim suspendisse in est.\r\n            </p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Et molestie ac feugiat sed lectus vestibulum mattis ullamcorper velit. Tempus egestas sed sed risus pretium quam vulputate dignissim suspendisse. Tristique risus nec feugiat in fermentum. Quisque id diam vel quam elementum pulvinar etiam non quam. Ut pharetra sit amet aliquam id. Accumsan tortor posuere ac ut consequat semper. Mauris augue neque gravida in fermentum et sollicitudin ac orci. Nunc eget lorem dolor sed viverra ipsum. Massa id neque aliquam vestibulum morbi blandit cursus. In pellentesque massa placerat duis. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. Amet venenatis urna cursus eget nunc scelerisque viverra mauris. Ornare arcu odio ut sem nulla. Quis lectus nulla at volutpat diam ut.\r\n            </p>\r\n\r\n            <h2>With RS_PRESERVE CLASS</h2>\r\n            <section className=\"readspeaker-button-section mt-3 mb-2\" id=\"readspeakerContainerSecond\">\r\n\r\n                <Container>\r\n\r\n                    <div id=\"readspeaker_button2\" class=\"rs_skip rsbtn rs_preserve\">\r\n                        <a rel=\"nofollow\" class=\"rsbtn_play\" accesskey=\"L\" title=\"Listen to this page using ReadSpeaker webReader\" href=\"https://app-na.readspeaker.com/cgi-bin/rsent?customerid=12602&amp;lang=en_us&amp;voice=Ashley&amp;readid=readspeakerContainerSecond&amp;url=https%3A%2F%2Fsatyamraz.github.io%2Freadspeaker%2F\">\r\n                            <span class=\"rsbtn_left rsimg rspart\"><span class=\"rsbtn_text\"><span>Listen</span></span></span>\r\n                            <span class=\"rsbtn_right rsimg rsplay rspart\"></span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"rs_preserve\">\r\n                        <ReactQuill theme=\"snow\" value={valueSecond} onChange={setValueSecond} />\r\n                    </div>\r\n\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy\r\n              text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\r\n              It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\r\n              It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with\r\n              desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n              It is a long established fact that a reader will be distracted by the readable content of a page when looking\r\n              at its layout.\r\n              The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to\r\n              using 'Content here, content here', making it look like readable English. Many desktop publishing packages and\r\n              web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover\r\n              many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident,\r\n              sometimes on purpose (injected humour and the like).\r\n\r\n           </p>\r\n\r\n                </Container>\r\n            </section>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ReadSpeakerReader","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReadSpeakerReader from './ReadSpeakerReader';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ReadSpeakerReader />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}